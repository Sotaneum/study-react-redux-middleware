{"version":3,"sources":["componenets/Counter.js","store/actions/counter.js","store/actions/types.js","containers/CounterContainer.js","componenets/Sample.js","store/actions/sample.js","containers/SampleContainer.js","App.js","store/reducers/counter.js","store/actions/loading.js","lib/createRequestSaga.js","store/reducers/sample.js","lib/api.js","store/reducers/loading.js","store/reducers/index.js","index.js"],"names":["Counter","onIncrease","onDecrease","number","onClick","increase","createAction","decrease","increaseAsync","decreaseAsync","connect","state","counter","Sample","loadingPost","loadingUsers","post","users","title","body","map","user","key","id","username","email","getPost","getUsers","sample","loading","useEffect","a","console","log","fn","App","className","increaseSage","decreaseSage","counterSaga","delay","put","takeEvery","takeLatest","handleActions","startLoading","requestType","finishLoading","createRequestSaga","type","request","SUCCESS","FAILURE","action","call","payload","response","data","error","sampleSaga","getPostSaga","axios","get","getUsersSaga","rootSaga","all","rootReducer","combineReducers","logger","createLogger","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","run","ReactDOM","render","document","getElementById"],"mappings":"4OAYeA,G,MAVC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACzC,OACE,6BACE,4BAAKA,GACL,4BAAQC,QAASH,GAAjB,MACA,4BAAQG,QAASF,GAAjB,S,QCJOG,EAAWC,YCHA,oBDIXC,EAAWD,YCHA,oBDKXE,EAAgBF,YCHC,0BDG4B,eAC7CG,EAAgBH,YCHC,0BDG4B,e,QEQ3CI,eACb,SAACC,GAAD,MAAY,CACVR,OAAQQ,EAAMC,WAEhB,CACEJ,gBACAC,iBANWC,EAVU,SAAC,GAA8C,IAA5CP,EAA2C,EAA3CA,OAAQK,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACjD,OACE,kBAAC,EAAD,CACEN,OAAQA,EACRF,WAAYO,EACZN,WAAYO,O,wBCuBHI,EA/BA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjD,OACE,6BACE,iCACE,kDACCH,GAAe,0BACdA,GAAeE,GACf,6BACE,4BAAKA,EAAKE,OACV,4BAAKF,EAAKG,QAIhB,6BACA,iCACE,+DACCJ,GAAgB,0BACfA,GAAgBE,GAChB,4BACGA,EAAMG,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,IACXF,EAAKG,SADR,KACoBH,EAAKI,MADzB,YCnBDC,EAAUpB,YHGC,mBGHsB,SAACiB,GAAD,OAAQA,KACzCI,EAAWrB,YHKA,mBIyBTI,eACb,gBAAGkB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,MAA0B,CACxBb,KAAMY,EAAOZ,KACbC,MAAOW,EAAOX,MACdH,YAAae,EAAQ,mBACrBd,aAAcc,EAAQ,uBAExB,CACEH,UACAC,YATWjB,EA7BS,SAAC,GAOlB,IANLgB,EAMI,EANJA,QACAC,EAKI,EALJA,SACAX,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAH,EAEI,EAFJA,YACAC,EACI,EADJA,aAaA,OAXAe,qBAAU,YACA,uCAAG,sBAAAC,EAAA,+EAEDL,EAAQ,GAFP,uBAGDC,EAAS,GAHR,uDAKPK,QAAQC,IAAR,MALO,yDAAH,qDAQRC,KACC,CAACR,EAASC,IAEX,kBAAC,EAAD,CACEX,KAAMA,EACNC,MAAOA,EACPH,YAAaA,EACbC,aAAcA,OCfLoB,I,EAAAA,EAVf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,Q,yCCCIC,G,WAKAC,G,WAKOC,GAVjB,SAAUF,IAAV,iEACE,OADF,SACQG,YAAM,KADd,OAEE,OAFF,SAEQC,YAAIpC,KAFZ,uCAKA,SAAUiC,IAAV,iEACE,OADF,SACQE,YAAM,KADd,OAEE,OAFF,SAEQC,YAAIlC,KAFZ,uCAKO,SAAUgC,IAAV,iEACL,OADK,SACCG,YNlBsB,yBMkBIL,GAD3B,OAEL,OAFK,SAECM,YNlBsB,yBMkBKL,GAF5B,uCAKP,I,EAUe1B,EARCgC,aAAa,mBN3BL,oBM6BR,SAACjC,GAAD,OAAWA,EAAQ,KAFN,cN1BL,oBM6BR,SAACA,GAAD,OAAWA,EAAQ,KAHN,GAFR,G,wBCtBRkC,EAAevC,YPSC,yBOP3B,SAACwC,GAAD,OAAiBA,KAGNC,EAAgBzC,YPKC,0BOH5B,SAACwC,GAAD,OAAiBA,KCPJ,SAASE,EAAkBC,EAAMC,GAC9C,IAAMC,EAAO,UAAMF,EAAN,YACPG,EAAO,UAAMH,EAAN,YAEb,iBAAO,WAAWI,GAAX,uEACL,OADK,SACCZ,YAAII,EAAaI,IADlB,OAGc,OAHd,kBAGoBK,YAAKJ,EAASG,EAAOE,SAHzC,OAIH,OADMC,EAHH,gBAIGf,YAAI,CACRQ,KAAME,EACNI,QAASC,EAASC,OANjB,+BASH,OATG,oCASGhB,YAAI,CACRQ,KAAMG,EACNG,QAAQ,EAAD,GACPG,OAAO,IAZN,QAeL,OAfK,UAeCjB,YAAIM,EAAcE,IAfnB,yD,eCOQU,GAHXC,EAAcZ,ETLI,mBUJD,SAACzB,GAAD,OACrBsC,IAAMC,IAAN,qDAAwDvC,ODSpDwC,EAAef,ETHG,mBUJA,SAACzB,GAAD,OACtBsC,IAAMC,IAAN,iDDQK,SAAUH,IAAV,iEACL,OADK,SACChB,YTTgB,kBSSKiB,GADtB,OAEL,OAFK,SAECjB,YTPgB,kBSOKoB,GAFtB,uCAKP,I,EAmBenC,EAdAgB,aAAa,iBAAC,ETjBG,2BSmBR,SAACjC,EAAO0C,GAAR,mBAAC,eAChB1C,GADe,IAElBK,KAAMqC,EAAOE,aAJS,YAAC,ETdG,2BSoBR,SAAC5C,EAAO0C,GAAR,mBAAC,eAChB1C,GADe,IAElBM,MAAOoC,EAAOE,aARQ,GALP,CACnBvC,KAAM,KACNC,MAAO,OEFMY,EAdCe,aAAa,iBAAC,EXOD,yBWLR,SAACjC,EAAO0C,GAAR,mBAAC,eACb1C,GADY,kBAEd0C,EAAOE,SAAU,OAJK,YAAC,EXQA,0BWFR,SAAC5C,EAAO0C,GAAR,mBAAC,eACd1C,GADa,kBAEf0C,EAAOE,SAAU,OARK,GAFR,I,WCSJS,GAAV,SAAUA,IAAV,iEACL,OADK,SACCC,YAAI,CAAC1B,IAAeoB,MADrB,uCAIQO,MAVKC,0BAAgB,CAClCvD,UACAgB,SACAC,Y,kCCGIuC,GAASC,yBACTC,GAAiBC,eACjBC,GAAQC,sBACZP,EACAQ,+BAAoBC,0BAAgBP,GAAQQ,IAAYN,MAG1DA,GAAeO,IAAIb,GAEnBc,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.7341fd6e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Counter = ({ onIncrease, onDecrease, number }) => {\n  return (\n    <div>\n      <h1>{number}</h1>\n      <button onClick={onIncrease}>+1</button>\n      <button onClick={onDecrease}>-1</button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import { createAction } from \"redux-actions\";\nimport { INCREASE, DECREASE, INCREASE_ASYNC, DECREASE_ASYNC } from \"./types\";\n\nexport const increase = createAction(INCREASE);\nexport const decrease = createAction(DECREASE);\n\nexport const increaseAsync = createAction(INCREASE_ASYNC, () => undefined);\nexport const decreaseAsync = createAction(DECREASE_ASYNC, () => undefined);\n","export const INCREASE = \"counter/INCREASE\";\nexport const DECREASE = \"counter/DECREASE\";\n\nexport const INCREASE_ASYNC = \"counter/INCREASE_ASYNC\";\nexport const DECREASE_ASYNC = \"counter/DECREASE_ASYNC\";\n\nexport const GET_POST = \"sample/GET_POST\";\nexport const GET_POST_SUCCESS = \"sample/GET_POST_SUCCESS\";\n\nexport const GET_USER = \"sample/GET_USER\";\nexport const GET_USER_SUCCESS = \"sample/GET_USER_SUCCESS\";\n\nexport const START_LOADING = \"loading/START_LOADING\";\nexport const FINISH_LOADING = \"loading/FINISH_LOADING\";\n","import React from \"react\";\nimport Counter from \"../componenets/Counter\";\nimport { increaseAsync, decreaseAsync } from \"../store/actions/counter\";\nimport { connect } from \"react-redux\";\n\nconst CounterContainer = ({ number, increaseAsync, decreaseAsync }) => {\n  return (\n    <Counter\n      number={number}\n      onIncrease={increaseAsync}\n      onDecrease={decreaseAsync}\n    />\n  );\n};\n\nexport default connect(\n  (state) => ({\n    number: state.counter,\n  }),\n  {\n    increaseAsync,\n    decreaseAsync,\n  }\n)(CounterContainer);\n","import React from \"react\";\n\nconst Sample = ({ loadingPost, loadingUsers, post, users }) => {\n  return (\n    <div>\n      <section>\n        <h1>포스트</h1>\n        {loadingPost && \"로딩 중...\"}\n        {!loadingPost && post && (\n          <div>\n            <h3>{post.title}</h3>\n            <h3>{post.body}</h3>\n          </div>\n        )}\n      </section>\n      <hr />\n      <section>\n        <h1>사용자 목록</h1>\n        {loadingUsers && \"로딩 중...\"}\n        {!loadingUsers && users && (\n          <ul>\n            {users.map((user) => (\n              <li key={user.id}>\n                {user.username} ({user.email})\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default Sample;\n","import { GET_POST, GET_USER } from \"./types\";\nimport { createAction } from \"redux-actions\";\n\nexport const getPost = createAction(GET_POST, (id) => id);\nexport const getUsers = createAction(GET_USER);\n","import React, { useEffect } from \"react\";\nimport Sample from \"../componenets/Sample\";\nimport { connect } from \"react-redux\";\nimport { getPost, getUsers } from \"../store/actions/sample\";\n\nconst SampleContainer = ({\n  getPost,\n  getUsers,\n  post,\n  users,\n  loadingPost,\n  loadingUsers,\n}) => {\n  useEffect(() => {\n    const fn = async () => {\n      try {\n        await getPost(1);\n        await getUsers(1);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fn();\n  }, [getPost, getUsers]);\n  return (\n    <Sample\n      post={post}\n      users={users}\n      loadingPost={loadingPost}\n      loadingUsers={loadingUsers}\n    />\n  );\n};\n\nexport default connect(\n  ({ sample, loading }) => ({\n    post: sample.post,\n    users: sample.users,\n    loadingPost: loading[\"sample/GET_POST\"],\n    loadingUsers: loading[\"sample/GET_USERS\"],\n  }),\n  {\n    getPost,\n    getUsers,\n  }\n)(SampleContainer);\n","import React from \"react\";\nimport CounterContainer from \"./containers/CounterContainer\";\nimport SampleContainer from \"./containers/SampleContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterContainer />\n      <hr />\n      <SampleContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { handleActions } from \"redux-actions\";\nimport {\n  INCREASE,\n  DECREASE,\n  INCREASE_ASYNC,\n  DECREASE_ASYNC,\n} from \"../actions/types\";\nimport { increase, decrease } from \"../actions/counter\";\nimport { delay, put, takeEvery, takeLatest } from \"redux-saga/effects\";\n\nfunction* increaseSage() {\n  yield delay(1000);\n  yield put(increase());\n}\n\nfunction* decreaseSage() {\n  yield delay(1000);\n  yield put(decrease());\n}\n\nexport function* counterSaga() {\n  yield takeEvery(INCREASE_ASYNC, increaseSage);\n  yield takeLatest(DECREASE_ASYNC, decreaseSage);\n}\n\nconst initialState = 0;\n\nconst counter = handleActions(\n  {\n    [INCREASE]: (state) => state + 1,\n    [DECREASE]: (state) => state - 1,\n  },\n  initialState\n);\n\nexport default counter;\n","import { createAction } from \"redux-actions\";\nimport { START_LOADING, FINISH_LOADING } from \"./types\";\n\nexport const startLoading = createAction(\n  START_LOADING,\n  (requestType) => requestType\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  (requestType) => requestType\n);\n","import { call, put } from \"redux-saga/effects\";\nimport { startLoading, finishLoading } from \"../store/actions/loading\";\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function* (action) {\n    yield put(startLoading(type));\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type));\n  };\n}\n","import {\n  GET_POST_SUCCESS,\n  GET_USER_SUCCESS,\n  GET_POST,\n  GET_USER,\n} from \"../actions/types\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport { handleActions } from \"redux-actions\";\nimport * as api from \"../../lib/api\";\nimport createRequestSaga from \"../../lib/createRequestSaga\";\n\nconst getPostSaga = createRequestSaga(GET_POST, api.getPost);\nconst getUsersSaga = createRequestSaga(GET_USER, api.getUsers);\n\nexport function* sampleSaga() {\n  yield takeLatest(GET_POST, getPostSaga);\n  yield takeLatest(GET_USER, getUsersSaga);\n}\n\nconst initialState = {\n  post: null,\n  users: null,\n};\n\nconst sample = handleActions(\n  {\n    [GET_POST_SUCCESS]: (state, action) => ({\n      ...state,\n      post: action.payload,\n    }),\n    [GET_USER_SUCCESS]: (state, action) => ({\n      ...state,\n      users: action.payload,\n    }),\n  },\n  initialState\n);\n\nexport default sample;\n","import axios from \"axios\";\n\nexport const getPost = (id) =>\n  axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n\nexport const getUsers = (id) =>\n  axios.get(`https://jsonplaceholder.typicode.com/users`);\n","import { handleActions } from \"redux-actions\";\nimport { START_LOADING, FINISH_LOADING } from \"../actions/types\";\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true,\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false,\n    }),\n  },\n  initialState\n);\n\nexport default loading;\n","import counter, { counterSaga } from \"./counter\";\nimport { all } from \"redux-saga/effects\";\nimport sample, { sampleSaga } from \"./sample\";\nimport loading from \"./loading\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  counter,\n  sample,\n  loading,\n});\n\nexport function* rootSaga() {\n  yield all([counterSaga(), sampleSaga()]);\n}\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer, { rootSaga } from \"./store/reducers\";\nimport { createLogger } from \"redux-logger\";\nimport ReduxThunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst logger = createLogger();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger, ReduxThunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}